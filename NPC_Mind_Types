-- Define the base NPC structure with dynamic mind types and inventory
NPC = {
    name = "",  -- NPC's name
    position = {x = 0, y = 0},  -- Current position
    current_mind_type = "",  -- The current mind type of the NPC
    mind_types = {},  -- A list of mind types the NPC can assume
    inventory = {},  -- Inventory holding items the NPC possesses
}

-- Define mind types as behavioral roles or modes with required items and tasks
mind_types = {
    ["Warrior"] = {
        attack_range = 8,  -- Range within which the NPC attacks
        task = "Engage in combat",  -- Primary task for this mind type
        special_ability = "Charge",  -- Special ability specific to this mind type
        required_items = {"sword", "shield"},  -- Items required to perform as a Warrior
    },
    ["Archer"] = {
        attack_range = 15,  -- Range within which the NPC attacks
        task = "Ranged attack",  -- Primary task for this mind type
        special_ability = "Volley",  -- Special ability specific to this mind type
        required_items = {"bow", "arrows"},  -- Items required to perform as an Archer
    },
    ["Mage"] = {
        attack_range = 12,  -- Range within which the NPC casts spells
        task = "Cast spells",  -- Primary task for this mind type
        special_ability = "Fireball",  -- Special ability specific to this mind type
        required_items = {"staff", "spellbook"},  -- Items required to perform as a Mage
    },
    ["Commander"] = {
        command_range = 25,  -- Range within which the NPC can issue commands
        task = "Issue commands",  -- Primary task for this mind type
        special_ability = "Strategize",  -- Special ability specific to this mind type
        required_items = {},  -- Commanders may not require specific items
    },
    ["Scout"] = {
        perception = 7,  -- Perception level for detecting enemies or objects
        task = "Scan area",  -- Primary task for this mind type
        special_ability = "Stealth",  -- Special ability specific to this mind type
        required_items = {"binoculars", "camouflage"},  -- Items required to perform as a Scout
    },
    ["Thief"] = {
        hide_range = 10,  -- Range within which the NPC searches for hiding spots
        task = "Steal and evade",  -- Primary task for this mind type
        special_ability = "Pickpocket",  -- Special ability specific to this mind type
        required_items = {"dagger", "lockpick"},  -- Items required to perform as a Thief
    },
    ["Engineer"] = {
        defense_range = 15,  -- Range within which the NPC can set up defenses
        task = "Set up defenses",  -- Primary task for this mind type
        special_ability = "Fortify",  -- Special ability specific to this mind type
        required_items = {"hammer", "nails", "wood"},  -- Items required to perform as an Engineer
    },
    ["Guard"] = {
        patrol_points = {},  -- List of waypoints for the NPC to patrol
        task = "Patrol area",  -- Primary task for this mind type
        special_ability = "Alert",  -- Special ability specific to this mind type
        required_items = {"spear", "armor"},  -- Items required to perform as a Guard
    },
    ["Villager"] = {
        task = "Survive",  -- Primary task for this mind type
        special_ability = "Flee",  -- Special ability specific to this mind type
        required_items = {},  -- Villagers may not require specific items
    },
    ["Bandit"] = {
        task = "Ambush",  -- Primary task for this mind type
        special_ability = "Intimidate",  -- Special ability specific to this mind type
        required_items = {"club", "mask"},  -- Items required to perform as a Bandit
    },
}

-- Function to check if NPC has the required items for the current mind type
function has_required_items(npc)
    local required_items = mind_types[npc.current_mind_type].required_items
    for _, item in ipairs(required_items) do
        if not npc.inventory[item] then
            return false, item
        end
    end
    return true, nil
end

-- Function to switch NPC mind type
function switch_mind_type(npc, new_mind_type)
    npc.current_mind_type = new_mind_type
    local has_items, missing_item = has_required_items(npc)
    if has_items then
        print(npc.name .. " is now operating as a " .. npc.current_mind_type .. ".")
    else
        print(npc.name .. " cannot switch to " .. npc.current_mind_type .. " because they lack a " .. missing_item .. ".")
    end
end

-- Example NPC creation
npc1 = {
    name = "Archer 1",
    position = {x = 5, y = 5},
    current_mind_type = "Archer",
    inventory = {bow = true, arrows = true},  -- NPC has a bow and arrows
    mind_types = mind_types,
}

-- Example usage:
switch_mind_type(npc1, "Archer")  -- Should succeed because the NPC has the required items
switch_mind_type(npc1, "Mage")  -- Should fail because the NPC lacks a staff and spellbook
