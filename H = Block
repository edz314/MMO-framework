-- Define the NPC object
NPC = {
    name = "Knight",  -- NPC's name
    health = 100,  -- Current health of the NPC
    block_chance = 0.5,  -- Probability of successfully blocking an attack (50% chance)
    block_damage_reduction = 0.7,  -- Percentage of damage reduction when blocking (e.g., 70%)
    is_blocking = false,  -- Indicates whether the NPC is currently blocking
}

-- Function to simulate an incoming attack
function incoming_attack(damage)
    if NPC.is_blocking then
        -- Calculate if the block is successful based on block_chance
        local block_successful = math.random() < NPC.block_chance

        if block_successful then
            -- Reduce damage by the block_damage_reduction percentage
            damage = damage * (1 - NPC.block_damage_reduction)
            print(NPC.name .. " successfully blocked the attack! Damage reduced to " .. damage)
        else
            print(NPC.name .. " failed to block the attack!")
        end
    else
        print(NPC.name .. " did not block the attack!")
    end

    -- Apply the (potentially reduced) damage to the NPC's health
    NPC.health = NPC.health - damage
    print(NPC.name .. "'s health is now " .. NPC.health)
end

-- Block action function
function block_action()
    -- Set the NPC to blocking mode
    NPC.is_blocking = true
    print(NPC.name .. " is now blocking and ready to reduce incoming damage.")
end

-- Example usage:
-- Assume an attack is incoming with a damage value
local incoming_damage = 30

-- NPC decides to block
block_action()

-- Simulate the incoming attack
incoming_attack(incoming_damage)

-- Reset blocking state (for example, after the attack round)
NPC.is_blocking = false
