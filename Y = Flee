-- Define the NPC object
NPC = {
    name = "Villager",  -- NPC's name
    position = {x = 5, y = 5},  -- Current position
    speed = 3,  -- Movement speed (units per second)
    health = 50,  -- NPC's current health
}

-- Define the perceived threat (e.g., an enemy)
threat = {
    name = "Monster",
    position = {x = 7, y = 5},  -- Current position of the threat
}

-- Define a safe location the NPC should flee towards
safe_location = {x = 0, y = 0}  -- Safe location to flee to

-- Function to calculate the distance between two points
function calculate_distance(point1, point2)
    local dx = point2.x - point1.x
    local dy = point2.y - point1.y
    return math.sqrt(dx * dx + dy * dy)
end

-- Function to calculate the direction vector away from the threat
function calculate_flee_direction(npc_position, threat_position, safe_location)
    -- Calculate the direction vector from the threat
    local dx = npc_position.x - threat_position.x
    local dy = npc_position.y - threat_position.y
    local distance_to_threat = calculate_distance(npc_position, threat_position)
    
    -- Normalize the direction vector to get the direction away from the threat
    local flee_direction = {x = dx / distance_to_threat, y = dy / distance_to_threat}
    
    -- Optionally, move towards a safe location
    if safe_location then
        -- Combine the flee direction with the direction towards the safe location
        local dx_safe = safe_location.x - npc_position.x
        local dy_safe = safe_location.y - npc_position.y
        flee_direction.x = flee_direction.x + dx_safe
        flee_direction.y = flee_direction.y + dy_safe
        
        -- Normalize the combined direction
        local distance_to_safe = calculate_distance(npc_position, safe_location)
        flee_direction.x = flee_direction.x / (distance_to_threat + distance_to_safe)
        flee_direction.y = flee_direction.y / (distance_to_threat + distance_to_safe)
    end

    return flee_direction
end

-- Flee action function
function flee_action()
    -- Calculate the flee direction away from the threat
    local flee_direction = calculate_flee_direction(NPC.position, threat.position, safe_location)

    -- Move the NPC in the flee direction at the specified speed
    NPC.position.x = NPC.position.x + flee_direction.x * NPC.speed
    NPC.position.y = NPC.position.y + flee_direction.y * NPC.speed

    print(NPC.name .. " is fleeing from " .. threat.name .. " to position (" .. NPC.position.x .. ", " .. NPC.position.y .. ").")
end

-- Example usage:
-- Execute the flee action
flee_action()

-- Output the NPC's position after fleeing
print(NPC.name .. " has fled to position (" .. NPC.position.x .. ", " .. NPC.position.y .. ").")
