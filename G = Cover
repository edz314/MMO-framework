-- Define the NPC object
NPC = {
    name = "Soldier",  -- NPC's name
    speed = 3,  -- Units per second
    position = {x = 5, y = 5},  -- Current position
    health_threshold = 50,  -- Health level below which the NPC seeks cover
    health = 100,  -- Current health of the NPC
}

-- Define potential cover spots in the environment
cover_spots = {
    {position = {x = 2, y = 3}},
    {position = {x = 8, y = 7}},
    {position = {x = 4, y = 1}},
    {position = {x = 10, y = 10}},
}

-- Function to calculate the distance between two points
function calculate_distance(point1, point2)
    local dx = point2.x - point1.x
    local dy = point2.y - point1.y
    return math.sqrt(dx * dx + dy * dy)
end

-- Function to find the nearest cover spot
function find_nearest_cover()
    local nearest_cover = nil
    local shortest_distance = math.huge  -- Initialize with a very large number

    for _, cover in ipairs(cover_spots) do
        local distance = calculate_distance(NPC.position, cover.position)
        if distance < shortest_distance then
            shortest_distance = distance
            nearest_cover = cover
        end
    end

    return nearest_cover
end

-- Function to move NPC towards a specific point
function move_towards_point(target_point, speed)
    -- Calculate the direction vector towards the target point
    local direction = {
        x = target_point.x - NPC.position.x,
        y = target_point.y - NPC.position.y
    }

    -- Normalize the direction vector
    local magnitude = calculate_distance(NPC.position, target_point)
    direction.x = direction.x / magnitude
    direction.y = direction.y / magnitude

    -- Move the NPC in the direction of the target point
    NPC.position.x = NPC.position.x + direction.x * speed
    NPC.position.y = NPC.position.y + direction.y * speed
end

-- Cover action function
function cover_action()
    -- Check if the NPC's health is below the threshold
    if NPC.health <= NPC.health_threshold then
        -- Find the nearest cover spot
        local cover_spot = find_nearest_cover()

        if cover_spot then
            -- Move towards the cover spot
            move_towards_point(cover_spot.position, NPC.speed)
            print(NPC.name .. " is moving to cover at position: (" .. cover_spot.position.x .. ", " .. cover_spot.position.y .. ")")
        else
            -- If no cover is available, print a message
            print("No cover available.")
        end
    else
        -- If health is above the threshold, no cover needed
        print("Health is sufficient, no need to seek cover.")
    end
end

-- Example usage:
-- Reduce the NPC's health to trigger the cover action
NPC.health = 30

-- Execute the cover action
cover_action()

-- Output the NPC's position after seeking cover
print("NPC's position after seeking cover: (" .. NPC.position.x .. ", " .. NPC.position.y .. ")")
